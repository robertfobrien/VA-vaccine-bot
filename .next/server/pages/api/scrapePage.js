module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../../ssr-module-cache.js');
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./pages/api/scrapePage.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./pages/api/scrapePage.js":
/*!*********************************!*\
  !*** ./pages/api/scrapePage.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next */ \"next\");\n/* harmony import */ var next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst puppeteer = __webpack_require__(/*! puppeteer */ \"puppeteer\");\n\nconst ig = __webpack_require__(/*! instagram-scraping */ \"instagram-scraping\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ((req, res) => {\n  (async () => {\n    console.log('####################################################################################################################');\n    console.log(\"{\");\n    console.log(\"type: '\" + \"name\" + \"',\");\n    console.log(\"name: '\" + req.body.name + \"',\");\n    console.log(\"}\");\n    let browser = await puppeteer.launch({\n      headless: true\n    }); //turn to FALSE to debug\n\n    let page = await browser.newPage();\n\n    if (req.body.youtubelink != \"\") {\n      await page.goto(req.body.youtubelink + '/about', {\n        waitUntil: 'networkidle2'\n      });\n      let youtubeStats = await page.evaluate(() => {\n        var type, name, description, viewsString, viewsNum, subscriberString, subscriberNum, subscriberPrefix;\n        var nameObj = document.querySelector('#channel-name > div > div');\n        if (nameObj != null) name = nameObj.innerText;\n        var descriptionObj = document.querySelector('#description');\n        if (descriptionObj != null) description = descriptionObj.innerText;\n        var subscriberStringObj = document.querySelector('#subscriber-count');\n\n        if (subscriberStringObj != null) {\n          subscriberString = subscriberStringObj.innerText;\n          subscriberString = subscriberString.slice(0, subscriberString.length - 12);\n          subscriberPrefix = subscriberString.slice(0, subscriberString.length - 1);\n        }\n\n        var endLetterObj = document.querySelector('#subscriber-count');\n\n        if (endLetterObj != null) {\n          var endLetter = document.querySelector('#subscriber-count').innerText.slice(0, document.querySelector('#subscriber-count').innerText.length - 12);\n          endLetter = endLetter.slice(endLetter.length - 1);\n          if (endLetter == \"K\") subscriberNum = parseInt(parseFloat(subscriberPrefix) * 1000);else if (endLetter == \"M\") subscriberNum = parseInt(parseFloat(subscriberPrefix) * 1000000);else subscriberNum = parseInt(subscriberString);\n        }\n\n        var viewStringObj = document.querySelectorAll('#right-column > yt-formatted-string')[2];\n\n        if (viewStringObj != null) {\n          viewsString = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n          viewsString = viewsString.slice(0, viewsString.length - 6);\n          viewsString = viewsString.replace(',', '').replace(',', '').replace(',', '');\n          viewsNum = parseInt(viewsString);\n        }\n\n        var type = 'youtube';\n        return {\n          type,\n          name,\n          description,\n          viewsString,\n          viewsNum,\n          subscriberString,\n          subscriberNum\n        };\n      });\n      await page.goto(req.body.youtubelink, {\n        waitUntil: 'networkidle2'\n      }); //Youtube video arrays and settings:\n\n      var videos = [];\n      const videoHref = await page.evaluate(() => {\n        var hrefs = [];\n\n        for (i = 0; i < 5; i++) {\n          if (document.querySelectorAll('#items > ytd-grid-video-renderer')[i] != null) hrefs[i] = document.querySelectorAll('a[id=\"video-title\"]')[i].getAttribute('href');\n        }\n\n        return hrefs;\n      });\n      var videoEmbed = [];\n\n      for (var j = 0; j < 5; j++) videoEmbed[j] = '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/' + videoHref[j].slice(9) + '\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>';\n\n      for (var j = 0; j < 5; j++) {\n        //TODO sometime the waituntil will not do everything we need it to and sometimes cannot see the page yet when searching later. \n        await page.goto('https://www.youtube.com' + videoHref[j], {\n          waitUntil: 'networkidle0'\n        });\n        let videoStats = await page.evaluate(() => {\n          let videoViews = document.querySelector('span[class=\"view-count style-scope ytd-video-view-count-renderer\"]').innerText;\n          let videoTitle = document.querySelector('h1[class=\"title style-scope ytd-video-primary-info-renderer\"]').innerText;\n          let videoPosted = document.querySelectorAll('yt-formatted-string[class=\"style-scope ytd-video-primary-info-renderer\"]')[1].innerText;\n          let videoLikes = document.querySelectorAll('yt-formatted-string[class=\"style-scope ytd-toggle-button-renderer style-text\"]')[0].getAttribute('aria-label');\n          let videoDislikes = document.querySelectorAll('yt-formatted-string[class=\"style-scope ytd-toggle-button-renderer style-text\"]')[1].getAttribute('aria-label');\n\n          function stringToNum(str) {\n            str = str.slice(0, str.search(\" \"));\n\n            while (str.search(\",\") != -1) {\n              str = str.replace(',', '');\n            }\n\n            return str;\n          }\n\n          videoViews = parseInt(stringToNum(videoViews));\n          videoLikes = parseInt(stringToNum(videoLikes));\n          videoDislikes = parseInt(stringToNum(videoDislikes));\n          videoPosted = new Date(\"\" + videoPosted + ' 00:00:00');\n          return {\n            \"title\": videoTitle,\n            \"views\": videoViews,\n            \"posted\": videoPosted.toString(),\n            \"likes\": videoLikes,\n            \"dislikes\": videoDislikes\n          };\n        });\n        const href = videoHref[j],\n              embed = videoEmbed[j];\n        videos[j] = {\n          videoStats,\n          href,\n          embed\n        };\n        console.log(videos[j]);\n      }\n\n      console.log(videos);\n      console.log(youtubeStats);\n    }\n\n    if (req.body.instagramlink != \"\") {\n      // using username for scraping\n      //cuts out just the username from the link\n      const positionOfUser = req.body.instagramlink.search('.com/');\n      var instaUser = req.body.instagramlink;\n\n      if (positionOfUser != -1) {\n        instaUser = req.body.instagramlink.slice(positionOfUser + 5);\n        const positionOfSlash = instaUser.search('/');\n        instaUser = instaUser.slice(0, positionOfSlash);\n      }\n\n      ig.scrapeUserPage(instaUser).then(result => {\n        console.dir(result);\n      });\n    }\n\n    if (req.body.facebooklink != \"\") {\n      await page.goto(req.body.facebooklink, {\n        waitUntil: 'networkidle2'\n      });\n      let facebookStats = await page.evaluate(() => {\n        var type, name, likes, followers, website, category;\n        if (document.querySelector('a[class=\"_64-f\"] > span') != null) name = document.querySelector('a[class=\"_64-f\"] > span').innerText;\n\n        if (document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[0] != null) {\n          likes = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[0].innerText;\n          likes = likes.slice(0, likes.length - 17).replace(',', '').replace(',', '').replace(',', '');\n        }\n\n        if (document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div._4bl9 > div')[1] != null) {\n          followers = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div._4bl9 > div')[1].innerText;\n          followers = followers.slice(0, followers.length - 19).replace(',', '').replace(',', '').replace(',', '');\n        }\n\n        if (document.querySelectorAll('#u_0_q_Oa > div > a')[1] != null) website = document.querySelectorAll('#u_0_q_Oa > div > a')[1].innerText;\n\n        if (document.querySelectorAll('div[class=\"_4bl9\"] > div')[4] != null) {\n          category = document.querySelectorAll('div[class=\"_4bl9\"] > div')[4].innerText; //handles for some pages that added \"contact on messenger\"\n\n          if (category.search('Contact') > -1) category = document.querySelectorAll('div[class=\"_4bl9\"] > div')[5].innerText;\n        }\n\n        var type = 'facebook';\n        var likesNum = parseInt(likes);\n        var followersNum = parseInt(followers);\n        return {\n          type,\n          name,\n          likesNum,\n          followersNum,\n          website,\n          category\n        };\n      });\n      let postStats = await page.evaluate(() => {\n        var posts = [];\n\n        for (i = 0; i < 2; i++) {\n          if (document.querySelectorAll('div[class=\"_5va1 _427x')[i] != null) posts[i] = document.querySelectorAll('div[class=\"_5va1 _427x')[i].innerText;else posts[i] = null;\n        }\n\n        var type = 'facebook-posts';\n        return {\n          type,\n          posts\n        };\n      });\n      console.log(postStats);\n      console.log(facebookStats);\n    }\n\n    await browser.close();\n  })();\n\n  res.status(200).json({\n    info: 'scrape page',\n    name: req.body.name\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/api/scrapePage.js\n");

/***/ }),

/***/ "instagram-scraping":
/*!*************************************!*\
  !*** external "instagram-scraping" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"instagram-scraping\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJpbnN0YWdyYW0tc2NyYXBpbmdcIj83YTJlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Imluc3RhZ3JhbS1zY3JhcGluZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImluc3RhZ3JhbS1zY3JhcGluZ1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///instagram-scraping\n");

/***/ }),

/***/ "next":
/*!***********************!*\
  !*** external "next" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"next\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJuZXh0XCI/ZWQ4YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJuZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwibmV4dFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///next\n");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"puppeteer\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJwdXBwZXRlZXJcIj8wNmZkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6InB1cHBldGVlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInB1cHBldGVlclwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///puppeteer\n");

/***/ })

/******/ });