{"ast":null,"code":"export default ((req, res) => {\n  const puppeteer = require(\"puppeteer\");\n\n  (async () => {\n    let browser = await puppeteer.launch({\n      headless: true\n    });\n    let page = await browser.newPage();\n\n    if (req.body.youtubelink != \"\") {\n      await page.goto(req.body.youtubelink + '/about', {\n        waitUntil: 'networkidle2'\n      });\n      let youtubeStats = await page.evaluate(() => {\n        var name = document.querySelector('#channel-name > div > div').innerText;\n        var description = document.querySelector('#description').innerText;\n        var subscriberString = document.querySelector('#subscriber-count').innerText;\n        subscriberString = subscriberString.slice(0, subscriberString.length - 12);\n        var endLetter = document.querySelector('#subscriber-count').innerText.slice(0, document.querySelector('#subscriber-count').innerText.length - 12);\n        endLetter = endLetter.slice(endLetter.length - 1);\n        var subscriberPrefix = subscriberString.slice(0, subscriberString.length - 1);\n        if (endLetter == \"K\") var subscriberNum = parseInt(parseFloat(subscriberPrefix) * 1000);else if (endLetter == \"M\") var subscriberNum = parseInt(parseFloat(subscriberPrefix) * 1000000);else var subscriberNum = parseInt(subscriberString);\n        var viewsString = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n        viewsString = viewsString.slice(0, viewsString.length - 6);\n        viewsString = viewsString.replace(',', '');\n        viewsString = viewsString.replace(',', '');\n        viewsString = viewsString.replace(',', '');\n        var type = 'youtube';\n        var viewsNum = parseInt(viewsString);\n        return {\n          type,\n          name,\n          description,\n          //viewsString,\n          viewsNum,\n          subscriberString,\n          subscriberNum\n        };\n      });\n      await page.goto(req.body.youtubelink + \"/featured\", {\n        waitUntil: 'networkidle2'\n      });\n      let videoStats = await page.evaluate(() => {\n        var videos = [];\n\n        for (i = 0; i < 10; i++) {\n          videos[i] = document.querySelectorAll('#items > ytd-grid-video-renderer')[i].innerText;\n        }\n\n        var type = 'youtube-videos';\n        return {\n          type,\n          videos\n        };\n      });\n      console.log(youtubeStats);\n      console.log(videoStats);\n    }\n\n    if (req.body.instagramlink != \"\") {\n      const Insta = require('scraper-instagram');\n\n      const InstaClient = new Insta();\n      InstaClient.authBySessionId('34469763805%3AH1hhHGwtqC9Hra%3A25').then(account => console.log(account)).catch(err => console.error(err));\n      InstaClient.getProfile('instagram').then(profile => console.log(profile)).catch(err => console.error(err));\n    }\n\n    await browser.close();\n  })();\n\n  res.status(200).json({\n    info: 'scrape page',\n    name: req.body.name\n  });\n});","map":{"version":3,"sources":["/Users/robertobrien/Documents/projects/ghost-scraper/pages/api/scrapePage.js"],"names":["req","res","puppeteer","require","browser","launch","headless","page","newPage","body","youtubelink","goto","waitUntil","youtubeStats","evaluate","name","document","querySelector","innerText","description","subscriberString","slice","length","endLetter","subscriberPrefix","subscriberNum","parseInt","parseFloat","viewsString","querySelectorAll","replace","type","viewsNum","videoStats","videos","i","console","log","instagramlink","Insta","InstaClient","authBySessionId","then","account","catch","err","error","getProfile","profile","close","status","json","info"],"mappings":"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","sourcesContent":["\nexport default (req, res) => {\n\n    const puppeteer = require(\"puppeteer\");\n\n    (async () => { \n        let browser = await puppeteer.launch({headless: true});\n        let page = await browser.newPage(); \n\n        if(req.body.youtubelink != \"\")\n        {\n        await page.goto(req.body.youtubelink + '/about', {waitUntil: 'networkidle2'});\n        \n        let youtubeStats = await page.evaluate(() => {\n\n            var name = document.querySelector('#channel-name > div > div').innerText;\n            var description = document.querySelector('#description').innerText;\n            var subscriberString = document.querySelector('#subscriber-count').innerText;\n            subscriberString = subscriberString.slice(0, subscriberString.length-12);\n\n            var endLetter = document.querySelector('#subscriber-count').innerText.slice(0,document.querySelector('#subscriber-count').innerText.length-12);\n            endLetter = endLetter.slice(endLetter.length-1);\n\n            var subscriberPrefix = subscriberString.slice(0,subscriberString.length-1);\n\n            if (endLetter == \"K\")\n                var subscriberNum = parseInt(parseFloat(subscriberPrefix)*1000);\n            else if (endLetter == \"M\")\n                var subscriberNum = parseInt(parseFloat(subscriberPrefix)*1000000);\n            else \n                var subscriberNum = parseInt(subscriberString);\n\n\n            var viewsString = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n            viewsString = viewsString.slice(0,viewsString.length-6);\n            viewsString = viewsString.replace(',', '');\n            viewsString = viewsString.replace(',', '');\n            viewsString = viewsString.replace(',', '');\n            var type = 'youtube';\n\n            var viewsNum = parseInt(viewsString);\n\n            return {\n                type,\n                name,\n                description,\n                //viewsString,\n                viewsNum,\n                subscriberString,\n                subscriberNum,\n            }\n        })\n\n        await page.goto(req.body.youtubelink + \"/featured\", {waitUntil: 'networkidle2'});\n\n        let videoStats = await page.evaluate(() => {\n            var videos = [];\n            for(i = 0; i < 10; i++)\n                {\n                videos[i] = document.querySelectorAll('#items > ytd-grid-video-renderer')[i].innerText;\n                }\n            var type = 'youtube-videos';\n            return {\n                type,\n                videos,\n            }\n        })\n\n        console.log(youtubeStats);\n        console.log(videoStats);\n    }\n\n    if(req.body.instagramlink != \"\")\n    {    \n        const Insta = require('scraper-instagram');\n        const InstaClient = new Insta();\n        InstaClient.authBySessionId('34469763805%3AH1hhHGwtqC9Hra%3A25')\n\t        .then(account => console.log(account))\n\t        .catch(err => console.error(err));\n\n        InstaClient.getProfile('instagram')\n\t        .then(profile => console.log(profile))\n\t        .catch(err => console.error(err));\n    }\n\n        await browser.close();\n\n        })();\n\n\n    res.status(200).json({ info: 'scrape page', name: req.body.name })\n  }\n  "]},"metadata":{},"sourceType":"module"}