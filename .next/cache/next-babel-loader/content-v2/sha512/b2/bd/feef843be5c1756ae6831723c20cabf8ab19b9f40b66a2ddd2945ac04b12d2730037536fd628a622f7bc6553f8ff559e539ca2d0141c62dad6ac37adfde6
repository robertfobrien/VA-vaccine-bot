{"ast":null,"code":"import next from \"next\";\n\nconst puppeteer = require(\"puppeteer\");\n\nconst ig = require('instagram-scraping');\n\nexport default ((req, res) => {\n  (async () => {\n    console.log('####################################################################################################################');\n    console.log(\"{\");\n    console.log(\"type: '\" + \"name\" + \"',\");\n    console.log(\"name: '\" + req.body.name + \"',\");\n    console.log(\"}\");\n    let browser = await puppeteer.launch({\n      headless: true\n    }); //turn to FALSE to debug\n\n    let page = await browser.newPage();\n\n    if (req.body.youtubelink != \"\") {\n      await page.goto(req.body.youtubelink + '/about', {\n        waitUntil: 'networkidle2'\n      });\n      let youtubeStats = await page.evaluate(() => {\n        var type, name, description, viewsString, viewsNum, subscriberString, subscriberNum, subscriberPrefix;\n        var nameObj = document.querySelector('#channel-name > div > div');\n        if (nameObj != null) name = nameObj.innerText;\n        var descriptionObj = document.querySelector('#description');\n        if (descriptionObj != null) description = descriptionObj.innerText;\n        var subscriberStringObj = document.querySelector('#subscriber-count');\n\n        if (subscriberStringObj != null) {\n          subscriberString = subscriberStringObj.innerText;\n          subscriberString = subscriberString.slice(0, subscriberString.length - 12);\n          subscriberPrefix = subscriberString.slice(0, subscriberString.length - 1);\n        }\n\n        var endLetterObj = document.querySelector('#subscriber-count');\n\n        if (endLetterObj != null) {\n          var endLetter = document.querySelector('#subscriber-count').innerText.slice(0, document.querySelector('#subscriber-count').innerText.length - 12);\n          endLetter = endLetter.slice(endLetter.length - 1);\n          if (endLetter == \"K\") subscriberNum = parseInt(parseFloat(subscriberPrefix) * 1000);else if (endLetter == \"M\") subscriberNum = parseInt(parseFloat(subscriberPrefix) * 1000000);else subscriberNum = parseInt(subscriberString);\n        }\n\n        var viewStringObj = document.querySelectorAll('#right-column > yt-formatted-string')[2];\n\n        if (viewStringObj != null) {\n          viewsString = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n          viewsString = viewsString.slice(0, viewsString.length - 6);\n          viewsString = viewsString.replace(',', '').replace(',', '').replace(',', '');\n          viewsNum = parseInt(viewsString);\n        }\n\n        var type = 'youtube';\n        return {\n          type,\n          name,\n          description,\n          viewsString,\n          viewsNum,\n          subscriberString,\n          subscriberNum\n        };\n      });\n      await page.goto(req.body.youtubelink, {\n        waitUntil: 'networkidle2'\n      }); //Youtube video arrays and settings:\n\n      var videos = [];\n      const videoHref = await page.evaluate(() => {\n        var hrefs = [];\n\n        for (i = 0; i < 5; i++) {\n          if (document.querySelectorAll('#items > ytd-grid-video-renderer')[i] != null) hrefs[i] = document.querySelectorAll('a[id=\"video-title\"]')[i].getAttribute('href');\n        }\n\n        return hrefs;\n      });\n      var videoEmbed = [];\n\n      for (var j = 0; j < 5; j++) videoEmbed[j] = '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/' + videoHref[j].slice(9) + '\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>';\n\n      for (var j = 0; j < 5; j++) {\n        //TODO sometime the waituntil will not do everything we need it to and sometimes cannot see the page yet when searching later. \n        await page.goto('https://www.youtube.com' + videoHref[j], {\n          waitUntil: 'networkidle0'\n        });\n        let videoStats = await page.evaluate(() => {\n          let videoViews = document.querySelector('span[class=\"view-count style-scope ytd-video-view-count-renderer\"]').innerText;\n          let videoTitle = document.querySelector('h1[class=\"title style-scope ytd-video-primary-info-renderer\"]').innerText;\n          let videoPosted = document.querySelectorAll('yt-formatted-string[class=\"style-scope ytd-video-primary-info-renderer\"]')[1].innerText;\n          let videoLikes = document.querySelectorAll('yt-formatted-string[class=\"style-scope ytd-toggle-button-renderer style-text\"]')[0].getAttribute('aria-label');\n          let videoDislikes = document.querySelectorAll('yt-formatted-string[class=\"style-scope ytd-toggle-button-renderer style-text\"]')[1].getAttribute('aria-label');\n\n          function stringToNum(str) {\n            str = str.slice(0, str.search(\" \"));\n\n            while (str.search(\",\") != -1) {\n              str = str.replace(',', '');\n            }\n\n            return str;\n          }\n\n          videoViews = parseInt(stringToNum(videoViews));\n          videoLikes = parseInt(stringToNum(videoLikes));\n          videoDislikes = parseInt(stringToNum(videoDislikes));\n          videoPosted = new Date(\"\" + videoPosted + '00:00:00');\n          return {\n            \"title\": videoTitle,\n            \"views\": videoViews,\n            \"posted\": videoPosted,\n            \"likes\": videoLikes,\n            \"dislikes\": videoDislikes\n          };\n        });\n        const href = videoHref[j],\n              embed = videoEmbed[j];\n        videos[j] = {\n          videoStats,\n          href,\n          embed\n        };\n        console.log(videos[j]);\n      }\n\n      console.log(videos);\n      console.log(youtubeStats);\n    }\n\n    if (req.body.instagramlink != \"\") {\n      // using username for scraping\n      //cuts out just the username from the link\n      const positionOfUser = req.body.instagramlink.search('.com/');\n      var instaUser = req.body.instagramlink;\n\n      if (positionOfUser != -1) {\n        instaUser = req.body.instagramlink.slice(positionOfUser + 5);\n        const positionOfSlash = instaUser.search('/');\n        instaUser = instaUser.slice(0, positionOfSlash);\n      }\n\n      ig.scrapeUserPage(instaUser).then(result => {\n        console.dir(result);\n      });\n    }\n\n    if (req.body.facebooklink != \"\") {\n      await page.goto(req.body.facebooklink, {\n        waitUntil: 'networkidle2'\n      });\n      let facebookStats = await page.evaluate(() => {\n        var type, name, likes, followers, website, category;\n        if (document.querySelector('a[class=\"_64-f\"] > span') != null) name = document.querySelector('a[class=\"_64-f\"] > span').innerText;\n\n        if (document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[0] != null) {\n          likes = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[0].innerText;\n          likes = likes.slice(0, likes.length - 17).replace(',', '').replace(',', '').replace(',', '');\n        }\n\n        if (document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div._4bl9 > div')[1] != null) {\n          followers = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div._4bl9 > div')[1].innerText;\n          followers = followers.slice(0, followers.length - 19).replace(',', '').replace(',', '').replace(',', '');\n        }\n\n        if (document.querySelectorAll('#u_0_q_Oa > div > a')[1] != null) website = document.querySelectorAll('#u_0_q_Oa > div > a')[1].innerText;\n\n        if (document.querySelectorAll('div[class=\"_4bl9\"] > div')[4] != null) {\n          category = document.querySelectorAll('div[class=\"_4bl9\"] > div')[4].innerText; //handles for some pages that added \"contact on messenger\"\n\n          if (category.search('Contact') > -1) category = document.querySelectorAll('div[class=\"_4bl9\"] > div')[5].innerText;\n        }\n\n        var type = 'facebook';\n        var likesNum = parseInt(likes);\n        var followersNum = parseInt(followers);\n        return {\n          type,\n          name,\n          likesNum,\n          followersNum,\n          website,\n          category\n        };\n      });\n      let postStats = await page.evaluate(() => {\n        var posts = [];\n\n        for (i = 0; i < 2; i++) {\n          if (document.querySelectorAll('div[class=\"_5va1 _427x')[i] != null) posts[i] = document.querySelectorAll('div[class=\"_5va1 _427x')[i].innerText;else posts[i] = null;\n        }\n\n        var type = 'facebook-posts';\n        return {\n          type,\n          posts\n        };\n      });\n      console.log(postStats);\n      console.log(facebookStats);\n    }\n\n    await browser.close();\n  })();\n\n  res.status(200).json({\n    info: 'scrape page',\n    name: req.body.name\n  });\n});","map":{"version":3,"sources":["/Users/robertobrien/Documents/projects/ghost-scraper/pages/api/scrapePage.js"],"names":["next","puppeteer","require","ig","req","res","console","log","body","name","browser","launch","headless","page","newPage","youtubelink","goto","waitUntil","youtubeStats","evaluate","type","description","viewsString","viewsNum","subscriberString","subscriberNum","subscriberPrefix","nameObj","document","querySelector","innerText","descriptionObj","subscriberStringObj","slice","length","endLetterObj","endLetter","parseInt","parseFloat","viewStringObj","querySelectorAll","replace","videos","videoHref","hrefs","i","getAttribute","videoEmbed","j","videoStats","videoViews","videoTitle","videoPosted","videoLikes","videoDislikes","stringToNum","str","search","Date","href","embed","instagramlink","positionOfUser","instaUser","positionOfSlash","scrapeUserPage","then","result","dir","facebooklink","facebookStats","likes","followers","website","category","likesNum","followersNum","postStats","posts","close","status","json","info"],"mappings":"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","sourcesContent":["import next from \"next\";\n\nconst puppeteer = require(\"puppeteer\");\nconst ig = require('instagram-scraping');\n\nexport default (req, res) => {\n\n\n    (async () => { \n\n        console.log('####################################################################################################################');\n        console.log(\"{\");\n        console.log(\"type: '\" + \"name\" + \"',\");\n        console.log(\"name: '\" + req.body.name + \"',\");\n        console.log(\"}\");\n        let browser = await puppeteer.launch({headless: true}); //turn to FALSE to debug\n        let page = await browser.newPage(); \n\n    if(req.body.youtubelink != \"\")\n        {\n        await page.goto(req.body.youtubelink + '/about', {waitUntil: 'networkidle2'});\n        \n        let youtubeStats = await page.evaluate(() => {\n\n            var type, name,description,viewsString,viewsNum,subscriberString,subscriberNum, subscriberPrefix;\n\n            var nameObj = document.querySelector('#channel-name > div > div');\n            if(nameObj != null)\n                name = nameObj.innerText;\n\n            var descriptionObj = document.querySelector('#description');\n            if(descriptionObj != null)\n                description = descriptionObj.innerText;\n            \n            var subscriberStringObj = document.querySelector('#subscriber-count');\n            if(subscriberStringObj != null)\n            {\n                subscriberString = subscriberStringObj.innerText;\n                subscriberString = subscriberString.slice(0, subscriberString.length-12);\n                subscriberPrefix = subscriberString.slice(0,subscriberString.length-1);\n            }\n\n            var endLetterObj = document.querySelector('#subscriber-count');\n            if(endLetterObj != null)\n            {\n                var endLetter = document.querySelector('#subscriber-count').innerText.slice(0,document.querySelector('#subscriber-count').innerText.length-12);\n                endLetter = endLetter.slice(endLetter.length-1);\n                if (endLetter == \"K\")\n                    subscriberNum = parseInt(parseFloat(subscriberPrefix)*1000);\n                else if (endLetter == \"M\")\n                    subscriberNum = parseInt(parseFloat(subscriberPrefix)*1000000);\n                 else \n                subscriberNum = parseInt(subscriberString);\n            }\n\n\n            \n\n\n        \n            var viewStringObj = document.querySelectorAll('#right-column > yt-formatted-string')[2];\n            if (viewStringObj != null)\n            {\n                viewsString = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n                viewsString = viewsString.slice(0,viewsString.length-6);\n                viewsString = viewsString.replace(',', '').replace(',', '').replace(',', '');\n                viewsNum = parseInt(viewsString);\n            }\n\n            var type = 'youtube';\n\n            return {\n                type,\n                name,\n                description,\n                viewsString,\n                viewsNum,\n                subscriberString,\n                subscriberNum,\n            }\n        })\n\n        \n\n        await page.goto(req.body.youtubelink, {waitUntil: 'networkidle2'});\n        //Youtube video arrays and settings:\n        var  videos = [];\n\n\n        const videoHref = await page.evaluate(() => {\n            var hrefs = [];\n            for(i = 0; i < 5; i++)\n                {\n                    if(document.querySelectorAll('#items > ytd-grid-video-renderer')[i] != null)\n                        hrefs[i] = document.querySelectorAll('a[id=\"video-title\"]')[i].getAttribute('href');\n                }\n            return hrefs;\n        })\n\n\n        var videoEmbed = []; \n        for(var j = 0; j < 5; j++)\n            videoEmbed[j] = '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/' + videoHref[j].slice(9) + '\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>';\n\n\n        \n\n        for(var j = 0; j < 5; j++)\n            {\n                //TODO sometime the waituntil will not do everything we need it to and sometimes cannot see the page yet when searching later. \n            await page.goto('https://www.youtube.com' + videoHref[j], {waitUntil: 'networkidle0'});\n            let videoStats = await page.evaluate(() => \n            {\n                \n                let videoViews = document.querySelector('span[class=\"view-count style-scope ytd-video-view-count-renderer\"]').innerText;\n                let videoTitle = document.querySelector('h1[class=\"title style-scope ytd-video-primary-info-renderer\"]').innerText;\n                let videoPosted = document.querySelectorAll('yt-formatted-string[class=\"style-scope ytd-video-primary-info-renderer\"]')[1].innerText;\n                let videoLikes = document.querySelectorAll('yt-formatted-string[class=\"style-scope ytd-toggle-button-renderer style-text\"]')[0].getAttribute('aria-label');\n                let videoDislikes = document.querySelectorAll('yt-formatted-string[class=\"style-scope ytd-toggle-button-renderer style-text\"]')[1].getAttribute('aria-label');\n\n                function stringToNum(str) {\n                    str = str.slice(0,str.search(\" \"));\n                    while(str.search(\",\") != -1)\n                        {\n                            str = str.replace(',','');\n                        }\n                    return str\n                  }\n\n                videoViews = parseInt(stringToNum(videoViews));\n                videoLikes = parseInt(stringToNum(videoLikes));\n                videoDislikes = parseInt(stringToNum(videoDislikes));\n                videoPosted = new Date(\"\" + videoPosted + '00:00:00');\n\n                return{\n                    \"title\": videoTitle,\n                    \"views\": videoViews,\n                    \"posted\": videoPosted,\n                    \"likes\": videoLikes,\n                    \"dislikes\": videoDislikes,\n                    }\n            })\n\n            const href = videoHref[j], embed = videoEmbed[j];\n            videos[j] = {\n                videoStats,\n                href,\n                embed,\n\n            }\n            console.log(videos[j]);\n\n        }\n        \n        \n        console.log(videos);\n        console.log(youtubeStats);\n        \n        }\n\n    if(req.body.instagramlink != \"\")\n    {    \n        \n        // using username for scraping\n        //cuts out just the username from the link\n        const positionOfUser = req.body.instagramlink.search('.com/');\n        var instaUser = req.body.instagramlink;\n\n        if(positionOfUser != -1)\n        {\n            instaUser = req.body.instagramlink.slice(positionOfUser+5);\n            const positionOfSlash = instaUser.search('/');\n            instaUser = instaUser.slice(0,positionOfSlash);\n        }\n\n        ig.scrapeUserPage(instaUser).then(result => {\n            console.dir(result);\n          });\n    }\n \n    \n    if(req.body.facebooklink != \"\")\n    {    \n        \n        await page.goto(req.body.facebooklink , {waitUntil: 'networkidle2'});\n\n        let facebookStats = await page.evaluate(() => {\n\n            var type,\n            name,\n            likes,\n            followers,\n            website,\n            category;\n\n            if(document.querySelector('a[class=\"_64-f\"] > span') != null)\n                name = document.querySelector('a[class=\"_64-f\"] > span').innerText;\n            if(document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[0] != null)\n            {\n                likes = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[0].innerText;\n                likes = likes.slice(0,likes.length-17).replace(',', '').replace(',', '').replace(',', '');\n            }\n            if(document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div._4bl9 > div')[1] != null)\n            {\n                followers = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div._4bl9 > div')[1].innerText;\n                followers = followers.slice(0,followers.length-19).replace(',', '').replace(',', '').replace(',', '');\n            }\n            if(document.querySelectorAll('#u_0_q_Oa > div > a')[1] != null)\n                website = document.querySelectorAll('#u_0_q_Oa > div > a')[1].innerText;\n            if(document.querySelectorAll('div[class=\"_4bl9\"] > div')[4] != null)\n                {\n                category = document.querySelectorAll('div[class=\"_4bl9\"] > div')[4].innerText;\n                //handles for some pages that added \"contact on messenger\"\n                if(category.search('Contact') > -1)\n                    category = document.querySelectorAll('div[class=\"_4bl9\"] > div')[5].innerText;\n                }\n            var type = 'facebook';\n\n            \n            var likesNum = parseInt(likes);\n            var followersNum = parseInt(followers);\n\n            return {\n                type,\n                name,\n                likesNum,\n                followersNum,\n                website,\n                category,\n            }\n        })\n\n        let postStats = await page.evaluate(() => {\n            var posts = [];\n            for(i = 0; i < 2; i++)\n                {\n                if(document.querySelectorAll('div[class=\"_5va1 _427x')[i] != null)\n                    posts[i] = document.querySelectorAll('div[class=\"_5va1 _427x')[i].innerText;\n                else\n                    posts[i] = null;\n                }\n            var type = 'facebook-posts';\n            return {\n                type,\n                posts,\n            }\n        })\n        console.log(postStats);\n        console.log(facebookStats);\n}\n\n        await browser.close();\n\n        })();\n\n\n    res.status(200).json({ info: 'scrape page', name: req.body.name })\n  }\n  "]},"metadata":{},"sourceType":"module"}