{"ast":null,"code":"import { Puppeteer } from \"puppeteer\"; // This is the script\n// based on req.body, call some api to get a webpage\n// scrap page\n// return json here\n\nexport default ((req, res) => {\n  const puppeteer = require(\"puppeteer\");\n\n  const fs = require('fs');\n\n  (async () => {\n    var browser = await puppeteer.launch({\n      headless: false\n    }); //var page = await browser.newPage(); \n    //gos to the facebook link\n\n    if (req.body.facebooklink != 'about:blank') {\n      await page.goto(req.body.facebooklink, {\n        waitUntil: 'networkidle2'\n      });\n      let facebookStats = await page.evaluate(() => {\n        var name = document.querySelector('a[class=\"_64-f\"]').innerText;\n        var likes = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div')[1].innerText;\n        var followers = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div')[2].innerText;\n        var website = document.querySelector('#u_0_q_x4').innerText;\n        var category = document.querySelectorAll('div[class=\"_4-u2 _u9q _3xaf _4-u8\"] > div ')[3].innerText;\n        var type = 'facebook';\n        var url = req.body.facebooklink;\n        return {\n          type,\n          url,\n          name,\n          likes,\n          followers,\n          website,\n          category\n        };\n      });\n      console.log(facebookStats);\n    } //goes to the youtube link (routed to about page)\n\n\n    const ytAboutLink = req.body.youtubelink + '/about';\n    await page.goto(ytAboutLink, {\n      waitUntil: 'networkidle2'\n    }); //makes sure the page is loaded\n\n    await document.querySelector('#channel-name').innerText;\n    let youtubeStats = await page.evaluate(() => {\n      var name = document.querySelector('#channel-name').innerText;\n      var description = document.querySelector('#description').innerText; //var rightColumn = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n\n      var views = '100,000';\n      var subscribers = document.querySelector('#subscriber-count').innerText;\n      var type = 'youtube';\n      var url = req.body.youtubelink;\n      return {\n        type,\n        url,\n        name,\n        description,\n        views,\n        subscribers\n      };\n    });\n    console.log(youtubeStats); //go to instagram\n\n    await page.goto(req.body.instagramlink, {\n      waitUntil: 'networkidle2'\n    });\n    let instagramStats = await page.evaluate(() => {\n      const mainStats = document.querySelectorAll('span[class=\"g47SY \"]');\n      var username = document.querySelector('h2[class=\"_7UhW9       fKFbl yUEEX   KV-D4              fDxYl     \"]').innerText;\n      var name = document.querySelector('h1[class=\"rhpdm\"]').innerText; //change title to innerText to be formatted the way instagram does. \n\n      var numPosts = mainStats[0].innerText;\n      var numFollowers = mainStats[1].title;\n      var numFollowing = mainStats[2].innerText;\n      var bio = document.querySelector('div[class=\"-vDIg\"] > span').innerText;\n      var website = document.querySelector('div[class=\"-vDIg\"] > a').innerText;\n      var type = 'instagram';\n      var url = req.body.instagramlink;\n      return {\n        type,\n        url,\n        username,\n        name,\n        bio,\n        website,\n        numFollowers,\n        numPosts,\n        numFollowing\n      };\n    });\n    console.log(instagramStats);\n    /* planning on how im gonna output this thing\n    obj = {facebookstats, instagramstats, youtubestats}\n    fs.writeFile(\"./\" + new Date().toString() + \".txt\", JSON.stringify(obj), function(err) {\n        if(err) {\n            return console.log(err);\n        }\n    \n        console.log(\"The file was saved!\");\n    }); \n    */\n\n    await browser.close();\n  })();\n\n  res.status(200).json({\n    info: 'scrape page',\n    name: req.body.name\n  });\n});","map":{"version":3,"sources":["/Users/robertobrien/Documents/projects/ghost-scraper/pages/api/scrapePage.js"],"names":["Puppeteer","req","res","puppeteer","require","fs","browser","launch","headless","body","facebooklink","page","goto","waitUntil","facebookStats","evaluate","name","document","querySelector","innerText","likes","querySelectorAll","followers","website","category","type","url","console","log","ytAboutLink","youtubelink","youtubeStats","description","views","subscribers","instagramlink","instagramStats","mainStats","username","numPosts","numFollowers","title","numFollowing","bio","close","status","json","info"],"mappings":"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","sourcesContent":["import { Puppeteer } from \"puppeteer\"\n\n\n// This is the script\n// based on req.body, call some api to get a webpage\n// scrap page\n// return json here\nexport default (req, res) => {\n\n    const puppeteer = require(\"puppeteer\");\n    const fs = require('fs');\n\n    (async () => { \n    var browser = await puppeteer.launch({headless: false});\n    //var page = await browser.newPage(); \n\n    \n    //gos to the facebook link\n    if(req.body.facebooklink != 'about:blank')\n    {\n        await page.goto(req.body.facebooklink, {waitUntil: 'networkidle2'});\n\n        let facebookStats = await page.evaluate(() => {\n            var name = document.querySelector('a[class=\"_64-f\"]').innerText;\n            var likes = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div')[1].innerText\n            var followers = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div')[2].innerText;\n            var website = document.querySelector('#u_0_q_x4').innerText;\n            var category = document.querySelectorAll('div[class=\"_4-u2 _u9q _3xaf _4-u8\"] > div ')[3].innerText;\n\n            var type = 'facebook';\n            var url = req.body.facebooklink;\n\n            return {\n                type,\n                url,\n                name,\n                likes,\n                followers,\n                website,\n                category,\n            }\n        })\n\n        console.log(facebookStats);\n    }\n\n    //goes to the youtube link (routed to about page)\n    const ytAboutLink = req.body.youtubelink + '/about';\n    await page.goto(ytAboutLink, {waitUntil: 'networkidle2'});\n\n    //makes sure the page is loaded\n    await document.querySelector('#channel-name').innerText;\n\n    let youtubeStats = await page.evaluate(() => {\n\n        var name = document.querySelector('#channel-name').innerText;\n        var description = document.querySelector('#description').innerText;\n        //var rightColumn = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n        var views = '100,000';\n        var subscribers = document.querySelector('#subscriber-count').innerText;\n\n\n        var type = 'youtube';\n        var url = req.body.youtubelink;\n\n        return {\n            type,\n            url,\n            name,\n            description,\n            views,\n            subscribers,\n        }\n    })\n\n    console.log(youtubeStats);\n\n    //go to instagram\n    await page.goto(req.body.instagramlink, {waitUntil: 'networkidle2'});\n\n    let instagramStats = await page.evaluate(() => {\n\n        const mainStats = document.querySelectorAll('span[class=\"g47SY \"]');\n        \n        var username = document.querySelector('h2[class=\"_7UhW9       fKFbl yUEEX   KV-D4              fDxYl     \"]').innerText;\n        var name = document.querySelector('h1[class=\"rhpdm\"]').innerText;\n\n        //change title to innerText to be formatted the way instagram does. \n        var numPosts = mainStats[0].innerText; \n        var numFollowers = mainStats[1].title;\n        var numFollowing = mainStats[2].innerText;\n\n        var bio = document.querySelector('div[class=\"-vDIg\"] > span').innerText;\n        var website = document.querySelector('div[class=\"-vDIg\"] > a').innerText;\n\n        var type = 'instagram';\n        var url = req.body.instagramlink;\n\n        return {\n            type,\n            url,\n            username,\n            name,\n            bio, \n            website,\n            numFollowers,\n            numPosts,\n            numFollowing,\n        }\n    })\n\n    console.log(instagramStats);\n\n    /* planning on how im gonna output this thing\n    obj = {facebookstats, instagramstats, youtubestats}\n    fs.writeFile(\"./\" + new Date().toString() + \".txt\", JSON.stringify(obj), function(err) {\n        if(err) {\n            return console.log(err);\n        }\n    \n        console.log(\"The file was saved!\");\n    }); \n    */\n\n    await browser.close();\n\n    })();\n\n\n    res.status(200).json({ info: 'scrape page', name: req.body.name })\n  }\n  "]},"metadata":{},"sourceType":"module"}