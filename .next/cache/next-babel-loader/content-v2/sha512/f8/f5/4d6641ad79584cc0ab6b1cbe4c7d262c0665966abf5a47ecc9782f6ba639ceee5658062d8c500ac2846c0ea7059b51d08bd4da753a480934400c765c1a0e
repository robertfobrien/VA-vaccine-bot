{"ast":null,"code":"export default ((req, res) => {\n  const puppeteer = require(\"puppeteer\");\n\n  (async () => {\n    let browser = await puppeteer.launch({\n      headless: true\n    });\n    let page = await browser.newPage();\n    await page.goto(req.body.youtubelink + '/about', {\n      waitUntil: 'networkidle2'\n    });\n    let youtubeStats = await page.evaluate(() => {\n      var name = document.querySelector('#channel-name > div > div').innerText;\n      var description = document.querySelector('#description').innerText;\n      var subscribers = subscribers = document.querySelector('#subscriber-count').innerText;\n      var views = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n      var type = 'youtube';\n      return {\n        type,\n        name,\n        description,\n        views,\n        subscribers\n      };\n    });\n    console.log(youtubeStats);\n    await browser.close();\n  })();\n\n  res.status(200).json({\n    info: 'scrape page',\n    name: req.body.name\n  });\n});","map":{"version":3,"sources":["/Users/robertobrien/Documents/projects/ghost-scraper/pages/api/scrapePage.js"],"names":["req","res","puppeteer","require","browser","launch","headless","page","newPage","goto","body","youtubelink","waitUntil","youtubeStats","evaluate","name","document","querySelector","innerText","description","subscribers","views","querySelectorAll","type","console","log","close","status","json","info"],"mappings":"AAEA,gBAAe,CAACA,GAAD,EAAMC,GAAN,KAAc;AAEzB,QAAMC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,GAAC,YAAY;AACT,QAAIC,OAAO,GAAG,MAAMF,SAAS,CAACG,MAAV,CAAiB;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAjB,CAApB;AACA,QAAIC,IAAI,GAAG,MAAMH,OAAO,CAACI,OAAR,EAAjB;AAEA,UAAMD,IAAI,CAACE,IAAL,CAAUT,GAAG,CAACU,IAAJ,CAASC,WAAT,GAAuB,QAAjC,EAA2C;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAA3C,CAAN;AAEA,QAAIC,YAAY,GAAG,MAAMN,IAAI,CAACO,QAAL,CAAc,MAAM;AAEzC,UAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,2BAAvB,EAAoDC,SAA/D;AACA,UAAIC,WAAW,GAAGH,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCC,SAAzD;AACA,UAAIE,WAAW,GAAGA,WAAW,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,EAA4CC,SAA5E;AACA,UAAIG,KAAK,GAAGL,QAAQ,CAACM,gBAAT,CAA0B,qCAA1B,EAAiE,CAAjE,EAAoEJ,SAAhF;AACA,UAAIK,IAAI,GAAG,SAAX;AAEA,aAAO;AACHA,QAAAA,IADG;AAEHR,QAAAA,IAFG;AAGHI,QAAAA,WAHG;AAIHE,QAAAA,KAJG;AAKHD,QAAAA;AALG,OAAP;AAOH,KAfwB,CAAzB;AAiBAI,IAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;AACA,UAAMT,OAAO,CAACsB,KAAR,EAAN;AAEC,GA1BL;;AA6BAzB,EAAAA,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,IAAI,EAAE,aAAR;AAAuBd,IAAAA,IAAI,EAAEf,GAAG,CAACU,IAAJ,CAASK;AAAtC,GAArB;AACD,CAlCH","sourcesContent":["\n\nexport default (req, res) => {\n\n    const puppeteer = require(\"puppeteer\");\n\n    (async () => { \n        let browser = await puppeteer.launch({headless: true});\n        let page = await browser.newPage(); \n        \n        await page.goto(req.body.youtubelink + '/about', {waitUntil: 'networkidle2'});\n        \n        let youtubeStats = await page.evaluate(() => {\n\n            var name = document.querySelector('#channel-name > div > div').innerText;\n            var description = document.querySelector('#description').innerText;\n            var subscribers = subscribers = document.querySelector('#subscriber-count').innerText;\n            var views = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n            var type = 'youtube';\n\n            return {\n                type,\n                name,\n                description,\n                views,\n                subscribers,\n            }\n        })\n\n        console.log(youtubeStats);\n        await browser.close();\n\n        })();\n\n\n    res.status(200).json({ info: 'scrape page', name: req.body.name })\n  }\n  "]},"metadata":{},"sourceType":"module"}