{"ast":null,"code":"import { Puppeteer } from \"puppeteer\"; // This is the script\n// based on req.body, call some api to get a webpage\n// scrap page\n// return json here\n\nexport default ((req, res) => {\n  const puppeteer = require(\"puppeteer\");\n\n  (async () => {\n    var browser = await puppeteer.launch({\n      headless: false\n    });\n    var page = await browser.newPage(); //gos to the facebook link\n\n    await page.goto(req.body.facebooklink, {\n      waitUntil: 'networkidle2'\n    });\n    let facebookStats = await page.evaluate(() => {\n      var name = document.querySelector('a[class=\"_64-f\"]').innerText;\n      var likes = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[1].innerText; //var followers = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div')[2].innerText;\n\n      var website = document.querySelector('#u_0_q_x4').innerText; //var category = document.querySelectorAll('div[class=\"_4-u2 _u9q _3xaf _4-u8\"] > div ')[3].innerText;\n\n      var type = 'facebook';\n      var url = req.body.facebooklink;\n      return {\n        type,\n        url,\n        name,\n        likes,\n        //followers,\n        website //category,\n\n      };\n    });\n    console.log(facebookStats); //goes to the youtube link \n\n    const ytAboutLink = req.body.youtubelink + '/about';\n    await page.goto(ytAboutLink); //makes sure the page is loaded\n\n    await document.querySelector('#channel-name').innerText;\n    let youtubeStats = await page.evaluate(() => {\n      var name = document.querySelector('#channel-name').innerText;\n      var description = document.querySelector('#description').innerText; //var rightColumn = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n\n      var views = '100,000';\n      var subscribers = document.querySelector('#subscriber-count').innerText;\n      var type = 'youtube';\n      var url = req.body.youtubelink;\n      return {\n        type,\n        url,\n        name,\n        description,\n        views,\n        subscribers\n      };\n    });\n    console.log(youtubeStats); //go to instagram\n\n    await page.goto(req.body.instagramlink, {\n      waitUntil: 'networkidle2'\n    });\n    let instagramStats = await page.evaluate(() => {\n      const mainStats = document.querySelectorAll('span[class=\"g47SY \"]');\n      var username = document.querySelector('h2[class=\"_7UhW9       fKFbl yUEEX   KV-D4              fDxYl     \"]').innerText;\n      var name = document.querySelector('h1[class=\"rhpdm\"]').innerText; //change title to innerText to be formatted the way instagram does. \n\n      var numPosts = mainStats[0].innerText;\n      var numFollowers = mainStats[1].title;\n      var numFollowing = mainStats[2].innerText;\n      var bio = document.querySelector('div[class=\"-vDIg\"] > span').innerText;\n      var website = document.querySelector('div[class=\"-vDIg\"] > a').innerText;\n      var type = 'instagram';\n      var url = req.body.instagramlink;\n      return {\n        type,\n        url,\n        username,\n        name,\n        bio,\n        website,\n        numFollowers,\n        numPosts,\n        numFollowing\n      };\n    });\n    console.log(instagramStats);\n    await browser.close();\n  })();\n\n  res.status(200).json({\n    info: 'scrape page',\n    name: req.body.name\n  });\n});","map":{"version":3,"sources":["/Users/robertobrien/Documents/projects/ghost-scraper/pages/api/scrapePage.js"],"names":["Puppeteer","req","res","puppeteer","require","browser","launch","headless","page","newPage","goto","body","facebooklink","waitUntil","facebookStats","evaluate","name","document","querySelector","innerText","likes","querySelectorAll","website","type","url","console","log","ytAboutLink","youtubelink","youtubeStats","description","views","subscribers","instagramlink","instagramStats","mainStats","username","numPosts","numFollowers","title","numFollowing","bio","close","status","json","info"],"mappings":"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","sourcesContent":["import { Puppeteer } from \"puppeteer\"\n\n\n// This is the script\n// based on req.body, call some api to get a webpage\n// scrap page\n// return json here\nexport default (req, res) => {\n\n    const puppeteer = require(\"puppeteer\");\n\n    (async () => { \n    var browser = await puppeteer.launch({headless: false});\n    var page = await browser.newPage(); \n\n    //gos to the facebook link\n    await page.goto(req.body.facebooklink, {waitUntil: 'networkidle2'});\n\n    let facebookStats = await page.evaluate(() => {\n        var name = document.querySelector('a[class=\"_64-f\"]').innerText;\n        var likes = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[1].innerText;\n        //var followers = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div')[2].innerText;\n        var website = document.querySelector('#u_0_q_x4').innerText;\n        //var category = document.querySelectorAll('div[class=\"_4-u2 _u9q _3xaf _4-u8\"] > div ')[3].innerText;\n\n        var type = 'facebook';\n        var url = req.body.facebooklink;\n\n        return {\n            type,\n            url,\n            name,\n            likes,\n            //followers,\n            website,\n            //category,\n        }\n    })\n\n    console.log(facebookStats);\n\n    //goes to the youtube link \n    const ytAboutLink = req.body.youtubelink + '/about';\n    await page.goto(ytAboutLink);\n    //makes sure the page is loaded\n    await document.querySelector('#channel-name').innerText;\n\n    let youtubeStats = await page.evaluate(() => {\n\n        var name = document.querySelector('#channel-name').innerText;\n        var description = document.querySelector('#description').innerText;\n        //var rightColumn = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n        var views = '100,000';\n        var subscribers = document.querySelector('#subscriber-count').innerText;\n\n\n        var type = 'youtube';\n        var url = req.body.youtubelink;\n\n        return {\n            type,\n            url,\n            name,\n            description,\n            views,\n            subscribers,\n        }\n    })\n\n    console.log(youtubeStats);\n\n    //go to instagram\n    await page.goto(req.body.instagramlink, {waitUntil: 'networkidle2'});\n\n    let instagramStats = await page.evaluate(() => {\n\n        const mainStats = document.querySelectorAll('span[class=\"g47SY \"]');\n        \n        var username = document.querySelector('h2[class=\"_7UhW9       fKFbl yUEEX   KV-D4              fDxYl     \"]').innerText;\n        var name = document.querySelector('h1[class=\"rhpdm\"]').innerText;\n\n        //change title to innerText to be formatted the way instagram does. \n        var numPosts = mainStats[0].innerText; \n        var numFollowers = mainStats[1].title;\n        var numFollowing = mainStats[2].innerText;\n\n        var bio = document.querySelector('div[class=\"-vDIg\"] > span').innerText;\n        var website = document.querySelector('div[class=\"-vDIg\"] > a').innerText;\n\n        var type = 'instagram';\n        var url = req.body.instagramlink;\n\n        return {\n            type,\n            url,\n            username,\n            name,\n            bio, \n            website,\n            numFollowers,\n            numPosts,\n            numFollowing,\n        }\n    })\n\n    console.log(instagramStats);\n\n\n    await browser.close();\n\n    })();\n\n\n    \n\n    res.status(200).json({ info: 'scrape page', name: req.body.name })\n  }\n  "]},"metadata":{},"sourceType":"module"}