{"ast":null,"code":"const puppeteer = require(\"puppeteer\");\n\nconst ig = require('instagram-scraping');\n\nexport default ((req, res) => {\n  (async () => {\n    console.log('############################');\n    console.log(\"{\");\n    console.log(\"type: '\" + \"name\" + \"',\");\n    console.log(\"name: '\" + req.body.name + \"',\");\n    console.log(\"}\");\n    let browser = await puppeteer.launch({\n      headless: true\n    }); //turn to FALSE to debug\n\n    let page = await browser.newPage();\n\n    if (req.body.youtubelink != \"\") {\n      await page.goto(req.body.youtubelink + '/about', {\n        waitUntil: 'networkidle2'\n      });\n      let youtubeStats = await page.evaluate(() => {\n        var type, name, description, viewsString, viewsNum, subscriberString, subscriberNum, subscriberPrefix;\n        var nameObj = document.querySelector('#channel-name > div > div');\n        if (nameObj != null) name = nameObj.innerText;\n        var descriptionObj = document.querySelector('#description');\n        if (descriptionObj != null) description = descriptionObj.innerText;\n        var subscriberStringObj = document.querySelector('#subscriber-count');\n\n        if (subscriberStringObj != null) {\n          subscriberString = subscriberStringObj.innerText;\n          subscriberString = subscriberString.slice(0, subscriberString.length - 12);\n          subscriberPrefix = subscriberString.slice(0, subscriberString.length - 1);\n        }\n\n        var endLetterObj = document.querySelector('#subscriber-count');\n\n        if (endLetterObj != null) {\n          var endLetter = document.querySelector('#subscriber-count').innerText.slice(0, document.querySelector('#subscriber-count').innerText.length - 12);\n          endLetter = endLetter.slice(endLetter.length - 1);\n          if (endLetter == \"K\") subscriberNum = parseInt(parseFloat(subscriberPrefix) * 1000);else if (endLetter == \"M\") subscriberNum = parseInt(parseFloat(subscriberPrefix) * 1000000);else subscriberNum = parseInt(subscriberString);\n        }\n\n        var viewStringObj = document.querySelectorAll('#right-column > yt-formatted-string')[2];\n\n        if (viewStringObj != null) {\n          viewsString = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n          viewsString = viewsString.slice(0, viewsString.length - 6);\n          viewsString = viewsString.replace(',', '').replace(',', '').replace(',', '');\n          viewsNum = parseInt(viewsString);\n        }\n\n        var type = 'youtube';\n        return {\n          type,\n          name,\n          description,\n          viewsString,\n          viewsNum,\n          subscriberString,\n          subscriberNum\n        };\n      });\n      /*\n      await page.goto(req.body.youtubelink + \"/featured\", {waitUntil: 'networkidle2'});\n       let videoStats = await page.evaluate(() => {\n          var videos = [];\n          for(i = 0; i < 5; i++)\n              {\n              videos[i] = document.querySelectorAll('#items > ytd-grid-video-renderer')[i].innerText;\n              }\n          var type = 'youtube-videos';\n          return {\n              type,\n              videos,\n          }\n      })\n      console.log(videoStats);\n      */\n\n      console.log(youtubeStats);\n    }\n\n    if (req.body.instagramlink != \"\") {\n      // using username for scraping\n      //cuts out just the username from the link, or just uses the \n      //username if its already in that format\n      const positionOfUser = req.body.instagramlink.search('.com/');\n\n      if (positionOfUser != -1) {\n        let instaUser = req.body.instagramlink.slice(positionOfUser + 5);\n        const positionOfSlash = instaUser.search('/');\n        instaUser = instaUser.slice(0, positionOfSlash);\n      }\n\n      var username, numFollowers, numFollowing, bio, website, numPosts, posts, fullName;\n      var rawObject = ig.scrapeUserPage(instaUser).then(result => {\n        username = instaUser;\n        numFollowers = result.user.edge_followed_by.count;\n        numFollowing = result.user.edge_follow.count;\n        bio = result.user.biography;\n        website = result.user.external_url;\n        posts = [];\n        numPosts = result.total;\n\n        for (var i = 0; i < result.total; i++) {\n          var numLikes = result.medias[i].like_count;\n          var numComments = result.medias[i].comment_count;\n          posts[i] = {\n            numLikes,\n            numComments\n          };\n        }\n\n        fullName = user.full_name;\n      });\n      const instagramStats = {\n        \"type\": \"instagram\",\n        \"fullname\": fullName,\n        \"username\": username,\n        \"numposts\": numPosts,\n        \"numFollowers\": numFollowers,\n        \"numFollowing\": numFollowing,\n        \"bio\": bio,\n        \"website\": website,\n        \"posts\": posts\n      };\n      console.log(instagramStats);\n    }\n\n    if (req.body.facebooklink != \"\") {\n      await page.goto(req.body.facebooklink, {\n        waitUntil: 'networkidle2'\n      });\n      let facebookStats = await page.evaluate(() => {\n        var type, name, likes, followers, website, category;\n        if (document.querySelector('a[class=\"_64-f\"] > span') != null) name = document.querySelector('a[class=\"_64-f\"] > span').innerText;\n\n        if (document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[0] != null) {\n          likes = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[0].innerText;\n          likes = likes.slice(0, likes.length - 19).replace(',', '').replace(',', '').replace(',', '');\n        }\n\n        if (document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div._4bl9 > div')[1] != null) {\n          followers = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div._4bl9 > div')[1].innerText;\n          followers = followers.slice(0, followers.length - 19).replace(',', '').replace(',', '').replace(',', '');\n        }\n\n        if (document.querySelectorAll('#u_0_q_Oa > div > a')[1] != null) website = document.querySelectorAll('#u_0_q_Oa > div > a')[1].innerText;\n        if (document.querySelectorAll('div[class=\"_4bl9\"] > div')[4] != null) category = document.querySelectorAll('div[class=\"_4bl9\"] > div')[4].innerText;\n        var type = 'facebook';\n        var likesNum = parseInt(likes);\n        var followersNum = parseInt(followers);\n        return {\n          type,\n          name,\n          likesNum,\n          followersNum,\n          website,\n          category\n        };\n      });\n      console.log(facebookStats);\n    }\n\n    await browser.close();\n  })();\n\n  res.status(200).json({\n    info: 'scrape page',\n    name: req.body.name\n  });\n});","map":{"version":3,"sources":["/Users/robertobrien/Documents/projects/ghost-scraper/pages/api/scrapePage.js"],"names":["puppeteer","require","ig","req","res","console","log","body","name","browser","launch","headless","page","newPage","youtubelink","goto","waitUntil","youtubeStats","evaluate","type","description","viewsString","viewsNum","subscriberString","subscriberNum","subscriberPrefix","nameObj","document","querySelector","innerText","descriptionObj","subscriberStringObj","slice","length","endLetterObj","endLetter","parseInt","parseFloat","viewStringObj","querySelectorAll","replace","instagramlink","positionOfUser","search","instaUser","positionOfSlash","username","numFollowers","numFollowing","bio","website","numPosts","posts","fullName","rawObject","scrapeUserPage","then","result","user","edge_followed_by","count","edge_follow","biography","external_url","total","i","numLikes","medias","like_count","numComments","comment_count","full_name","instagramStats","facebooklink","facebookStats","likes","followers","category","likesNum","followersNum","close","status","json","info"],"mappings":"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","sourcesContent":["const puppeteer = require(\"puppeteer\");\nconst ig = require('instagram-scraping');\n\nexport default (req, res) => {\n\n    (async () => { \n\n        console.log('############################');\n        console.log(\"{\");\n        console.log(\"type: '\" + \"name\" + \"',\");\n        console.log(\"name: '\" + req.body.name + \"',\");\n        console.log(\"}\");\n        let browser = await puppeteer.launch({headless: true}); //turn to FALSE to debug\n        let page = await browser.newPage(); \n\n    if(req.body.youtubelink != \"\")\n        {\n        await page.goto(req.body.youtubelink + '/about', {waitUntil: 'networkidle2'});\n        \n        let youtubeStats = await page.evaluate(() => {\n\n            var type, name,description,viewsString,viewsNum,subscriberString,subscriberNum, subscriberPrefix;\n\n            var nameObj = document.querySelector('#channel-name > div > div');\n            if(nameObj != null)\n                name = nameObj.innerText;\n\n            var descriptionObj = document.querySelector('#description');\n            if(descriptionObj != null)\n                description = descriptionObj.innerText;\n            \n            var subscriberStringObj = document.querySelector('#subscriber-count');\n            if(subscriberStringObj != null)\n            {\n                subscriberString = subscriberStringObj.innerText;\n                subscriberString = subscriberString.slice(0, subscriberString.length-12);\n                subscriberPrefix = subscriberString.slice(0,subscriberString.length-1);\n            }\n\n            var endLetterObj = document.querySelector('#subscriber-count');\n            if(endLetterObj != null)\n            {\n                var endLetter = document.querySelector('#subscriber-count').innerText.slice(0,document.querySelector('#subscriber-count').innerText.length-12);\n                endLetter = endLetter.slice(endLetter.length-1);\n                if (endLetter == \"K\")\n                    subscriberNum = parseInt(parseFloat(subscriberPrefix)*1000);\n                else if (endLetter == \"M\")\n                    subscriberNum = parseInt(parseFloat(subscriberPrefix)*1000000);\n                 else \n                subscriberNum = parseInt(subscriberString);\n            }\n\n\n            \n\n\n        \n            var viewStringObj = document.querySelectorAll('#right-column > yt-formatted-string')[2];\n            if (viewStringObj != null)\n            {\n                viewsString = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n                viewsString = viewsString.slice(0,viewsString.length-6);\n                viewsString = viewsString.replace(',', '').replace(',', '').replace(',', '');\n                viewsNum = parseInt(viewsString);\n            }\n\n            var type = 'youtube';\n\n            return {\n                type,\n                name,\n                description,\n                viewsString,\n                viewsNum,\n                subscriberString,\n                subscriberNum,\n            }\n        })\n\n        /*\n        await page.goto(req.body.youtubelink + \"/featured\", {waitUntil: 'networkidle2'});\n\n        let videoStats = await page.evaluate(() => {\n            var videos = [];\n            for(i = 0; i < 5; i++)\n                {\n                videos[i] = document.querySelectorAll('#items > ytd-grid-video-renderer')[i].innerText;\n                }\n            var type = 'youtube-videos';\n            return {\n                type,\n                videos,\n            }\n        })\n        console.log(videoStats);\n        */\n        \n       console.log(youtubeStats);\n        \n        }\n\n    if(req.body.instagramlink != \"\")\n    {    \n        \n        // using username for scraping\n        //cuts out just the username from the link, or just uses the \n        //username if its already in that format\n        const positionOfUser = req.body.instagramlink.search('.com/');\n        if(positionOfUser != -1)\n        {\n            let instaUser = req.body.instagramlink.slice(positionOfUser+5);\n            const positionOfSlash = instaUser.search('/');\n            instaUser = instaUser.slice(0,positionOfSlash);\n        }\n\n        var username, numFollowers, numFollowing, bio, website, numPosts, posts, fullName; \n\n        var rawObject = ig.scrapeUserPage(instaUser).then(result => {\n            username = instaUser;\n            numFollowers = result.user.edge_followed_by.count;\n            numFollowing =  result.user.edge_follow.count;\n            bio = result.user.biography;\n            website = result.user.external_url;\n            posts = [];\n            numPosts = result.total; \n            for(var i = 0; i < result.total; i++)\n            {\n                var numLikes = result.medias[i].like_count;\n                var numComments = result.medias[i].comment_count;\n                posts[i] = {\n                    numLikes,\n                    numComments,\n                }\n            }\n            fullName = user.full_name;\n        })\n\n       const instagramStats = {\n            \"type\":\"instagram\",\n            \"fullname\":fullName,\n            \"username\":username, \n            \"numposts\":numPosts,\n            \"numFollowers\":numFollowers,\n            \"numFollowing\":numFollowing,\n            \"bio\":bio,\n            \"website\":website,\n            \"posts\":posts,\n        }\n\n        console.log(instagramStats);\n    }\n \n    \n    if(req.body.facebooklink != \"\")\n    {    \n        \n        await page.goto(req.body.facebooklink , {waitUntil: 'networkidle2'});\n\n        let facebookStats = await page.evaluate(() => {\n\n            var type,\n            name,\n            likes,\n            followers,\n            website,\n            category;\n\n            if(document.querySelector('a[class=\"_64-f\"] > span') != null)\n                name = document.querySelector('a[class=\"_64-f\"] > span').innerText;\n            if(document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[0] != null)\n            {\n                likes = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div > div')[0].innerText;\n                likes = likes.slice(0,likes.length-19).replace(',', '').replace(',', '').replace(',', '');\n            }\n            if(document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div._4bl9 > div')[1] != null)\n            {\n                followers = document.querySelectorAll('div[class=\"_4-u2 _6590 _3xaf _4-u8\"] > div > div > div._4bl9 > div')[1].innerText;\n                followers = followers.slice(0,followers.length-19).replace(',', '').replace(',', '').replace(',', '');\n            }\n            if(document.querySelectorAll('#u_0_q_Oa > div > a')[1] != null)\n                website = document.querySelectorAll('#u_0_q_Oa > div > a')[1].innerText;\n            if(document.querySelectorAll('div[class=\"_4bl9\"] > div')[4] != null)\n                category = document.querySelectorAll('div[class=\"_4bl9\"] > div')[4].innerText;\n            var type = 'facebook';\n\n            \n            var likesNum = parseInt(likes);\n            var followersNum = parseInt(followers);\n\n            return {\n                type,\n                name,\n                likesNum,\n                followersNum,\n                website,\n                category,\n            }\n        })\n\n        console.log(facebookStats);\n}\n\n\n        await browser.close();\n\n        })();\n\n\n    res.status(200).json({ info: 'scrape page', name: req.body.name })\n  }\n  "]},"metadata":{},"sourceType":"module"}