{"ast":null,"code":"import { Puppeteer } from \"puppeteer\";\n\nconst puppeteer = require(\"puppeteer\");\n\nexport default ((req, res) => {\n  (async () => {\n    let browser = await puppeteer.launch({\n      headless: true\n    });\n    let page = await browser.newPage(); //goes to the youtube link (routed to about page)\n\n    const ytAboutLink = req.body.youtubelink + '/about';\n    await page.goto(ytAboutLink, {\n      waitUntil: 'networkidle2'\n    });\n    console.log(\"poop\");\n    let youtubeStats = await page.evaluate(() => {\n      var name = document.querySelector('#channel-name').innerText;\n      var description = document.querySelector('#description').innerText; //var rightColumn = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n\n      var subscribers = document.querySelector('#subscriber-count').innerText;\n      var type = 'youtube';\n      var url = req.body.youtubelink;\n      return {\n        type,\n        url,\n        name,\n        description,\n        views,\n        subscribers\n      };\n    });\n    console.log(youtubeStats);\n    await browser.close();\n  })();\n\n  res.status(200).json({\n    info: 'scrape page',\n    name: req.body.name\n  });\n});","map":{"version":3,"sources":["/Users/robertobrien/Documents/projects/ghost-scraper/pages/api/scrapePage.js"],"names":["Puppeteer","puppeteer","require","req","res","browser","launch","headless","page","newPage","ytAboutLink","body","youtubelink","goto","waitUntil","console","log","youtubeStats","evaluate","name","document","querySelector","innerText","description","subscribers","type","url","views","close","status","json","info"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAEzB,GAAC,YAAY;AACT,QAAIC,OAAO,GAAG,MAAMJ,SAAS,CAACK,MAAV,CAAiB;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAjB,CAApB;AACA,QAAIC,IAAI,GAAG,MAAMH,OAAO,CAACI,OAAR,EAAjB,CAFS,CAIZ;;AACG,UAAMC,WAAW,GAAIP,GAAG,CAACQ,IAAJ,CAASC,WAAT,GAAuB,QAA5C;AAEA,UAAMJ,IAAI,CAACK,IAAL,CAAUH,WAAV,EAAuB;AAACI,MAAAA,SAAS,EAAE;AAAZ,KAAvB,CAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAIC,YAAY,GAAG,MAAMT,IAAI,CAACU,QAAL,CAAc,MAAM;AAEzC,UAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,EAAwCC,SAAnD;AACA,UAAIC,WAAW,GAAGH,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCC,SAAzD,CAHyC,CAIzC;;AACA,UAAIE,WAAW,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,EAA4CC,SAA9D;AAEA,UAAIG,IAAI,GAAG,SAAX;AACA,UAAIC,GAAG,GAAGvB,GAAG,CAACQ,IAAJ,CAASC,WAAnB;AAEA,aAAO;AACHa,QAAAA,IADG;AAEHC,QAAAA,GAFG;AAGHP,QAAAA,IAHG;AAIHI,QAAAA,WAJG;AAKHI,QAAAA,KALG;AAMHH,QAAAA;AANG,OAAP;AAQH,KAlBwB,CAAzB;AAoBAT,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACA,UAAMZ,OAAO,CAACuB,KAAR,EAAN;AAEC,GAjCL;;AAoCAxB,EAAAA,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,IAAI,EAAE,aAAR;AAAuBZ,IAAAA,IAAI,EAAEhB,GAAG,CAACQ,IAAJ,CAASQ;AAAtC,GAArB;AACD,CAvCH","sourcesContent":["import { Puppeteer } from \"puppeteer\"\n\nconst puppeteer = require(\"puppeteer\");\n\nexport default (req, res) => {\n\n    (async () => { \n        let browser = await puppeteer.launch({headless: true});\n        let page = await browser.newPage(); \n\n     //goes to the youtube link (routed to about page)\n        const ytAboutLink = (req.body.youtubelink + '/about');\n        \n        await page.goto(ytAboutLink, {waitUntil: 'networkidle2'});\n        \n        console.log(\"poop\");\n        let youtubeStats = await page.evaluate(() => {\n\n            var name = document.querySelector('#channel-name').innerText;\n            var description = document.querySelector('#description').innerText;\n            //var rightColumn = document.querySelectorAll('#right-column > yt-formatted-string')[2].innerText;\n            var subscribers = document.querySelector('#subscriber-count').innerText;\n\n            var type = 'youtube';\n            var url = req.body.youtubelink;\n\n            return {\n                type,\n                url,\n                name,\n                description,\n                views,\n                subscribers,\n            }\n        })\n\n        console.log(youtubeStats);\n        await browser.close();\n\n        })();\n\n\n    res.status(200).json({ info: 'scrape page', name: req.body.name })\n  }\n  "]},"metadata":{},"sourceType":"module"}